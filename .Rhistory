county == "Cork" ~ -8.4756,
county == "Dublin" ~ -6.2603),
lat = case_when(county == "Carlow" ~ 52.8408318,
county == "Cavan" ~ 53.9908295,
county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498)) %>%
mutate(ncase = as.character(ncase),
ncase = ifelse(ncase == "< = 5","5",ncase)) %>%
mutate(ncase = as.numeric(ncase)) %>%
county %>%
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -8, lat = 53.5, zoom = 7) %>%
clearShapes() %>%
addCircleMarkers(lng= ~long,
lat= ~lat,
layerId = ~county,
radius = ~ncase)
county <- read.csv("data/corona_county.csv") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
filter(date == max(date)) %>%
mutate(long = case_when(county == "Carlow" ~ -6.9261098,
county == "Cavan" ~ -7.3605599,
county == "Clare" ~ -8.9811,
county == "Donegal" ~ -8.1041,
county == "Kildare" ~ -6.9144402,
county == "Kilkenny" ~ -7.2448,
county == "Laois" ~ -7.3323,
county == "Leitrim" ~ -8.0020,
county == "Longford" ~ -7.7933,
county == "Louth" ~ -6.4889,
county == "Mayo" ~ -9.4289,
county == "Meath" ~ -6.6564,
county == "Monaghan" ~ -6.9683,
county == "Offaly" ~ -7.7122,
county == "Roscommon" ~ -8.1891,
county == "Sligo" ~ -8.4761,
county == "Tipperary" ~ -8.1619,
county == "Wexford" ~ -6.4633,
county == "Kerry" ~ -9.5669,
county == "Waterford" ~ -7.1101,
county == "Westmeath" ~ -7.4653,
county == "Wicklow" ~ -6.0446,
county == "Galway" ~ -9.0568,
county == "Limerick" ~ -8.6267,
county == "Cork" ~ -8.4756,
county == "Dublin" ~ -6.2603),
lat = case_when(county == "Carlow" ~ 52.8408318,
county == "Cavan" ~ 53.9908295,
county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498)) %>%
mutate(ncase = as.character(ncase),
ncase = ifelse(ncase == "< = 5","5",ncase)) %>%
mutate(ncase = as.numeric(ncase)) %>%
county %>%
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -8, lat = 53.5, zoom = 7) %>%
clearShapes() %>%
addCircleMarkers(lng= ~long,
lat= ~lat,
layerId = ~county,
radius = ~ncase)
county <- read.csv("data/corona_county.csv") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
filter(date == max(date)) %>%
mutate(long = case_when(county == "Carlow" ~ -6.9261098,
county == "Cavan" ~ -7.3605599,
county == "Clare" ~ -8.9811,
county == "Donegal" ~ -8.1041,
county == "Kildare" ~ -6.9144402,
county == "Kilkenny" ~ -7.2448,
county == "Laois" ~ -7.3323,
county == "Leitrim" ~ -8.0020,
county == "Longford" ~ -7.7933,
county == "Louth" ~ -6.4889,
county == "Mayo" ~ -9.4289,
county == "Meath" ~ -6.6564,
county == "Monaghan" ~ -6.9683,
county == "Offaly" ~ -7.7122,
county == "Roscommon" ~ -8.1891,
county == "Sligo" ~ -8.4761,
county == "Tipperary" ~ -8.1619,
county == "Wexford" ~ -6.4633,
county == "Kerry" ~ -9.5669,
county == "Waterford" ~ -7.1101,
county == "Westmeath" ~ -7.4653,
county == "Wicklow" ~ -6.0446,
county == "Galway" ~ -9.0568,
county == "Limerick" ~ -8.6267,
county == "Cork" ~ -8.4756,
county == "Dublin" ~ -6.2603),
lat = case_when(county == "Carlow" ~ 52.8408318,
county == "Cavan" ~ 53.9908295,
county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498)) %>%
mutate(ncase = as.character(ncase),
ncase = ifelse(ncase == "< = 5","5",ncase)) %>%
mutate(ncase = as.numeric(ncase))
View(county)
county %>%
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -8, lat = 53.5, zoom = 7) %>%
clearShapes() %>%
addCircleMarkers(lng= ~long,
lat= ~lat,
layerId = ~county,
radius = ~ncase)
county <- read.csv("data/corona_county.csv") %>%
mutate(date = as.Date(date,format = "%d/%m/%Y")) %>%
filter(date == max(date)) %>%
mutate(long = case_when(county == "Carlow" ~ -6.9261098,
county == "Cavan" ~ -7.3605599,
county == "Clare" ~ -8.9811,
county == "Donegal" ~ -8.1041,
county == "Kildare" ~ -6.9144402,
county == "Kilkenny" ~ -7.2448,
county == "Laois" ~ -7.3323,
county == "Leitrim" ~ -8.0020,
county == "Longford" ~ -7.7933,
county == "Louth" ~ -6.4889,
county == "Mayo" ~ -9.4289,
county == "Meath" ~ -6.6564,
county == "Monaghan" ~ -6.9683,
county == "Offaly" ~ -7.7122,
county == "Roscommon" ~ -8.1891,
county == "Sligo" ~ -8.4761,
county == "Tipperary" ~ -8.1619,
county == "Wexford" ~ -6.4633,
county == "Kerry" ~ -9.5669,
county == "Waterford" ~ -7.1101,
county == "Westmeath" ~ -7.4653,
county == "Wicklow" ~ -6.0446,
county == "Galway" ~ -9.0568,
county == "Limerick" ~ -8.6267,
county == "Cork" ~ -8.4756,
county == "Dublin" ~ -6.2603),
lat = case_when(county == "Carlow" ~ 52.8408318,
county == "Cavan" ~ 53.9908295,
county == "Clare" ~ 52.9045,
county == "Donegal" ~ 54.6549,
county == "Kildare" ~ 53.1561089,
county == "Kilkenny" ~ 52.6541,
county == "Laois" ~ 52.9943,
county == "Leitrim" ~ 54.1247,
county == "Longford" ~ 53.7276,
county == "Louth" ~ 53.9252,
county == "Mayo" ~ 54.0153,
county == "Meath" ~ 53.6055,
county == "Monaghan" ~ 54.2492,
county == "Offaly" ~ 53.2357,
county == "Roscommon" ~ 53.6276,
county == "Sligo" ~ 54.2766,
county == "Tipperary" ~ 52.4738,
county == "Wexford" ~ 52.3369,
county == "Kerry" ~ 52.1545,
county == "Waterford" ~ 52.2593,
county == "Westmeath" ~ 53.5345,
county == "Wicklow" ~ 52.9808,
county == "Galway" ~ 53.2707,
county == "Limerick" ~ 52.6638,
county == "Cork" ~ 51.8985,
county == "Dublin" ~ 53.3498)) %>%
mutate(ncases = as.character(ncase),
ncases = ifelse(ncases == "< = 5","5",ncases)) %>%
mutate(ncases = as.numeric(ncases))
View(county)
labs <- lapply(seq(nrow(county)), function(i) {
paste0( '<p>', county[i, "ncase"],' cases </p><p>')
})
county %>%
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -8, lat = 53.5, zoom = 6) %>%
clearShapes() %>%
addCircleMarkers(lng= ~long,
lat= ~lat,
layerId = ~area,
radius = ~ncases/2,
label = lapply(labs, htmltools::HTML))
county %>%
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -8, lat = 53.5, zoom = 6) %>%
clearShapes() %>%
addCircleMarkers(lng= ~long,
lat= ~lat,
layerId = ~county,
radius = ~ncases/2,
label = lapply(labs, htmltools::HTML))
county %>%
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -8, lat = 53.5, zoom = ) %>%
clearShapes() %>%
addCircleMarkers(lng= ~long,
lat= ~lat,
layerId = ~county,
radius = ~ncase)
county %>%
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -8, lat = 53.5, zoom = 8) %>%
clearShapes() %>%
addCircleMarkers(lng= ~long,
lat= ~lat,
layerId = ~county,
radius = ~ncase)
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz')
shiny::runApp('coronaviz')
?colorNumeric
pal <- colorNumeric("Reds")
runApp('coronaviz')
previewColors(colorNumeric("Blues", domain = NULL), sort(rexp(16)))
previewColors(colorNumeric("Red", domain = NULL), sort(rexp(16)))
previewColors(colorNumeric("Reds", domain = NULL), sort(rexp(16)))
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
shiny::runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
4.922+1.882
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
shiny::runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
shiny::runApp('coronaviz')
shiny::runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
?theme
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
shiny::runApp('coronaviz')
shiny::runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
?colorFactor
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
?addCircleMarkers
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
library(shiny); runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
?`Stat2Data-package`
library(Stat2Data)
data("AudioVisual")
View(AudioVisual)
library(tidyverse)
AudioVisual %>%
group_by(Stimulus, Group) %>%
summarise(n=n(),mean=mean(ResponseTime),sd=sd(ResponseTime))
AudioVisual %>%
ggplot(aes(x=Group, y = ResponseTime, fill = Group)) + geom_boxplot() + facet_wrap(~Stimulus)
anova2 <- aov(ResponseTime ~ Stimulus + Group, data = AudioVisual)
summary(anova2)
AudioVisual %>%
group_by(Stimulus, Group) %>%
summarise(n=n(),mean=mean(ResponseTime),sd=sd(ResponseTime)) %>%
ggplot(aes(x=Group,y=mean,group=Stimulus,color=Stimulus)) + geom_line()
anova3 <- aov(ResponseTime ~ Stimulus * Group, data = AudioVisual)
summary(anova3)
AudioVisual$residuals <- anova3$residuals
ggplot(AudioVisual,aes(x=Group, y = residuals, fill = Group)) + geom_boxplot() + facet_wrap(~Stimulus)
ggplot(AudioVisual, aes(x=residuals)) + geom_histogram()
ggplot(AudioVisual, aes(sample=residuals)) + geom_qq() + geom_qq_line()
data("ChildSpeaks")
View(ChildSpeaks)
data("CrackerFiber")
View(CrackerFiber)
help("CrackerFiber")
View(CrackerFiber)
library(dplyr)
CrackerFiber %>% group_by(Fiber) %>% summarise(n = n(),
mean = mean(Calories),
sd = sd(Calories))
library(ggplot2)
ggplot(CrackerFiber, aes(x = Fiber, y = Calories, fill = Fiber)) + geom_boxplot()
anova1 <- aov(Calories ~ Fiber, data = CrackerFiber)
summary(anova1)
CrackerFiber$Res <- anova1$residuals
ggplot(CrackerFiber, aes(x=Fiber, y=Res)) + geom_point()
ggplot(CrackerFiber, aes(x=Res)) + geom_histogram()
ggplot(CrackerFiber, aes(sample=Res)) + geom_qq() + geom_qq_line()
pairwise.t.test(CrackerFiber$Calories, CrackerFiber$Fiber, p.adjust.method = "Bonferroni")
pairwise.t.test(CrackerFiber$Calories, CrackerFiber$Fiber, p.adjust.method = "bonferroni")
pairwise.t.test(CrackerFiber$Calories, CrackerFiber$Fiber)
?pairwise.t.test
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
data("Putts1")
library(tidyverse)
library(tidyverse)
Putts1 %>% group_by(Made) %>% summarise(n = n(),
mean = mean(Length),
sd = sd(Length))
Putts1 %>% group_by(Length) %>% summarise(n = n(),
prop = mean(Made))
ggplot(Putts1, aes(x = Made, y = Length, fill = Made)) + geom_boxplot()
ggplot(Putts1, aes(x = as.factor(Made), y = Length, fill = as.factor(Made))) + geom_boxplot()
View(Putts1)
model <- glm(Made ~ Length, data = Putts1, family = binomial(link = "logit"))
summary(model)
exp(-0.56614)
model2 <- glm(Made ~ as.factor(Length), data = Putts1, family = binomial(link = "logit"))
summary(model2)
coef(summary(model2))
coef(summary(model2))$Estimate
coef(summary(model2))[,1]
exp(coef(summary(model2))[,1])
?fisher.test
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
data("Putts1")
model <- glm(Made ~ Length, data = Putts1, family = binomial("logit"))
summary(model)
?summary.glm
logLik(model)
exp(cbind(coef(model), confint(model)))
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
data("Putts1")
model <- glm(Made ~ Length, data = Putts2, family = binomial(link = "logit"))
model <- glm(Made ~ Length, data = Putts1, family = binomial(link = "logit"))
summary(model)
exp(coef(model))
confint(model)
exp(confint(model))
exp(cbind(coef(model),confint(model)))
summary(model)
logLik(model)
summary(model)
model$null.deviance
model$deviance
model$null.deviance - model$deviance
pchisq(80.3, df = 1, lower.tail = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
data("ICU")
View(ICU)
model1 <- glm(Survive ~ Age, data = ICU, family = binomial(link="logit"))
summary(model1)
exp(-0.02754)
exp(-0.02754)
model2 <- glm(Survive ~ Age + SysBP, data = ICU, family = binomial(link="logit"))
summary(model2)
exp(0.0168)
summary(model2)
logLik(model1)
logLik(model2)
-2 * logLik(model1) - (-2* logLik(model2))
model1$deviance - model2$deviance
model1$deviance - model2$deviance ## quicker with R
pchisq(9.05, df = 1, lower.tail = FALSE)
qchisq(0.05, df = 1, lower.tail = FALSE)
model1$deviance - model2$deviance ## quicker with R
model3 <- glm(Survive ~ Age + SysBP + I(Age^2), data = ICU, family = binomial(link="logit"))
summary(model3)
model2$deviance - model3$deviance
pchisq(model2$deviance - model3$deviance, df = 1, lower.tail = FALSE)
shiny::runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
shiny::runApp('coronaviz')
library(shinyMobile)
?shinymobile
?f7Accordion
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
shiny::runApp('coronaviz')
runApp('~/Desktop')
runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
runApp('coronaviz')
shiny::runApp('coronaviz')
shiny::runApp('coronaviz')
runApp('coronaviz/mobileapp.R')
runApp('coronaviz/mobileapp.R')
library(shiny); runApp('coronaviz/mobileapp.R')
runApp('coronaviz')
library(Stat2Data)
shiny::runApp('coronaviz')
runApp('coronaviz')
runApp('coronaviz')
